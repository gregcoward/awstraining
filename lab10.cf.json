{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a BIG-IP with 3 NIC's and puts it into an existing VPC, and subnets.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Basics"
                    },
                    "Parameters": [
                        "BIGIPName",
                        "KeyName",
                        "adminUsername",
                        "adminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Size"
                    },
                    "Parameters": [
                        "BIGIPInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Settings"
                    },
                    "Parameters": [
                        "BIGIPAMI"
                    ]
                }
            ],
            "ParameterLabels": {}
        }
    },
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "adminUsername": {
            "Type": "String",
            "Description": "An admin username for loging into the Windows Server and BIG-IP.",
            "MaxLength": "255",
            "MinLength": "1"
        },
        "adminPassword": {
            "Type": "String",
            "NoEcho": "true",
            "Description": "A password that will be used to login to the Windows Server and BIG-IP.",
            "MaxLength": "255",
            "MinLength": "1"
        },
        "BIGIPName": {
            "Description": "The name of the BIG-IP.",
            "Type": "String"
        },
        "BIGIPInstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "m3.xlarge",
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "cc1.4xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "Choose one of these."
        },
        "VPCId":{
            "Type": "AWS::EC2::VPC::Id",
            "Description": "The VPC containing the Subnets"
        },
        "BIGIPMgmtSubnet": {
            "Description": "EC2 instance type",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "BIGIPExternalSubnet": {
            "Description": "EC2 instance type",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "BIGIPInternalSubnet": {
            "Description": "EC2 instance type",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "BIGIPAMI": {
            "Description": "F5 BIG-IP AMI to install from.",
            "Type": "String",
            "Default": "ami-8633efe6",
            "AllowedValues": [
                "ami-8633efe6",
                "ami-0b7a011c"
            ]
        }
    },
    "Resources": {

        "BIGIPSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP and RDP",
                "VpcId": {
                    "Ref": "VPCId"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8443",
                        "ToPort": "8443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "BIGIPMgmtEip": {
            "Type": "AWS::EC2::EIP"
        },

        "BIGIPMgmtEipAssociation": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "BIGIPMgmtEip",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": { "Ref": "BigipMGMTInterface" },
                "PrivateIpAddress": {
                    "Fn::GetAtt": [
                        "BigipMGMTInterface",
                        "PrimaryPrivateIpAddress"
                    ]
                }
            }
        },

        "BIGIPExternalEip": {
            "Type": "AWS::EC2::EIP"
        },

        "BIGIPExternalEipAssociation": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "BIGIPExternalEip",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": { "Ref": "BigipExternalInterface" },
                "PrivateIpAddress": {
                    "Fn::GetAtt": [
                        "BigipExternalInterface",
                        "PrimaryPrivateIpAddress"
                    ]
                }
            }
        },

        "BigipExternalInterface": {
            "Properties": {
                "Description": "Public External Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "BIGIPSecurityGroup"
                    }
                ],
                "SecondaryPrivateIpAddressCount": "1",
                "SubnetId": {
                    "Ref": "BIGIPExternalSubnet"
                }                
            },
            "Type": "AWS::EC2::NetworkInterface"
        },

        "BigipInternalInterface": {
            "Properties": {
                "Description": "Internal Interface for the BIG-IP",
                "SubnetId": {
                    "Ref": "BIGIPInternalSubnet"
                }
            },
            "Type": "AWS::EC2::NetworkInterface"
        },

        "BigipMGMTInterface": {
            "Properties": {
                "Description": "MGMT Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "BIGIPSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "BIGIPMgmtSubnet"
                }                
            },
            "Type": "AWS::EC2::NetworkInterface"
        },

        "BIGIPInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/config/installCloudLibs.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "#!/bin/bash",
                                            "echo about to execute",
                                            "echo expanding f5-cloud-libs.tar.gz",
                                            "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/",
                                            "echo cloud libs install complete",
                                            "touch /config/cloud/cloudLibsReady"
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/config/cloud/aws/firstrun.utils": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/firstrun.utils"
                            },
                            "/config/cloud/f5-cloud-libs.tar.gz": {
                                "source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/v2.0.1/dist/f5-cloud-libs.tar.gz",
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/config/waitThenRun.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "#!/bin/bash",
                                            "while true; do echo waiting for cloud libs install to complete",
                                            "    if [ -f /config/cloud/cloudLibsReady ]; then",
                                            "        echo cloud libs installed",
                                            "        break",
                                            "    else",
                                            "        sleep 10",
                                            "    fi",
                                            "done",
                                            "\"$@\""
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/config/cloud/aws/createUser.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword\n",
                                            "PASSWORD=",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "\n",
                                            "if [ \"$1\" = admin ]; then\n",
                                            "    tmsh modify auth user \"$1\" password ${PASSWORD}\n",
                                            "else\n",
                                            "    tmsh create auth user \"$1\" password ${PASSWORD} shell bash partition-access replace-all-with { all-partitions { role admin } }\n",
                                            "fi\n"
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/config/cloud/aws/getNameServer.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "INTERFACE=$1",
                                            "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep HWaddr | awk '{print tolower($5)}'`",
                                            "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep HWaddr | awk '{print tolower($5)}'`",
                                            "VPC_CIDR_BLOCK=`curl -s http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
                                            "VPC_NET=${VPC_CIDR_BLOCK%/*}",
                                            "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
                                            "echo $NAME_SERVER"
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/config/cloud/aws/signalDone.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-signal -e $? '",
                                            {
                                                "Ref": "BIGIPWaitHandle"
                                            },
                                            "'\n"
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/config/cloud/aws/appConfiguartion.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "date\n",
                                            "echo 'Turning on iAppsLX'\n",
                                            "touch /var/config/rest/iapps/enable\n",
                                            "date\n",
                                            "echo 'Done turning on iAppsLX'\n",
                                            "exit\n"
                                        ]
                                    ]
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "001-disable-1nicautoconfig": {
                                "command": "/usr/bin/setdb provision.1nicautoconfig disable &>> /var/log/cloudlibs-install.log"
                            },
                            "002-install-libs": {
                                "command": "/config/installCloudLibs.sh &>> /var/log/cloudlibs-install.log"
                            },
                            "003-1nic-setup": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        []
                                    ]
                                }
                            },
                            "004-create-admin-user": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            " f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            " --file /config/cloud/aws/createUser.sh",
                                            " --cl-args '",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            "'",
                                            " --signal CREATEUSER_DONE",
                                            " --log-level verbose",
                                            " -o /var/log/createUser.log",
                                            " --background",
                                            " &>> /var/log/cloudlibs-install.log &"
                                        ]
                                    ]
                                }
                            },
                            "005-onboard-BIG-IP": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth0`;",
                                            "nohup /config/waitThenRun.sh",
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/onboard.js",
                                            "--ssl-port '8443'",
                                            "--log-level verbose",
                                            "-o  /var/log/onboard.log",
                                            "--background",
                                            "--no-reboot",
                                            "--wait-for CREATEUSER_DONE",
                                            "--signal ONBOARD_DONE",
                                            "--host localhost",
                                            "--user",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            "--password",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
                                            "--ntp 0.us.pool.ntp.org",
                                            "--ntp 1.us.pool.ntp.org",
                                            "--tz UTC",
                                            "--dns ${NAME_SERVER}",
                                            "--module ltm:nominal",
                                            "&>> /var/log/cloudlibs-install.log &"
                                        ]
                                    ]
                                }
                            },
                            "006-app-config": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            "--file /config/cloud/aws/appConfiguartion.sh",
                                            "--cwd /config/cloud/aws",
                                            "-o /var/log/appConfiguartion.log",
                                            "--wait-for ONBOARD_DONE",
                                            "--signal APP_CONFIG_DONE",
                                            "--background",
                                            "&>> /var/log/cloudlibs-install.log &"
                                        ]
                                    ]
                                }
                            },
                            "007-signal-done": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            "--file /config/cloud/aws/signalDone.sh",
                                            "--cwd /config/cloud/aws",
                                            "-o /var/log/signlDone.log",
                                            "--wait-for APP_CONFIG_DONE",
                                            "--background",
                                            "&>> /var/log/cloudlibs-install.log &"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "BIGIPInstanceType"
                },
                "ImageId": {
                    "Ref": "BIGIPAMI"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "Public or External Interface",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": { "Ref": "BigipExternalInterface" }
                    },
                    {
                        "Description": "Internal Interface",
                        "DeviceIndex": "2",
                        "NetworkInterfaceId": { "Ref": "BigipInternalInterface" }
                    },
                    {
                        "Description": "MGMT Interface",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": { "Ref": "BigipMGMTInterface" }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v ",
                                " --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource BIGIPInstance",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },

        "BIGIPWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "BIGIPInstance",
            "Properties": {
                "Handle": {
                    "Ref": "BIGIPWaitHandle"
                },
                "Count": "1",
                "Timeout": "1200"
            }
        },

        "BIGIPWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {}
        }
    },
    "Outputs": {
        "BIGIPURL": {
            "Description": "The BIG-IP MGMT URL.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "BIGIPInstance",
                                "PublicDnsName"
                            ]
                        },
                        ":8443/"
                    ]
                ]
            }
        }
    }
}