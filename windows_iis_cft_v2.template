{
  "AWSTemplateFormatVersion" : "2010-09-09",
 
  "Description" : "This template creates a single server installation of Microsoft Windows Server 2012 R2, and configures IIS.",

  "Metadata"                 : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
                {
                    "Label" : {
                        "default" : "Basics"
                    },
                    "Parameters" : [
                        "Name",
                        "KeyName"
                    ]
                },
                {
                    "Label" : {
                        "default" : "Size"
                    },
                    "Parameters" : [
                        "InstanceType"                
                    ]
                },
                {
                    "Label" : {
                        "default" : "Settings"
                    },
                    "Parameters" : [
                        "VpcId",
                        "Subnet",
                        "WindowsVersion"
                    ]
                }
            ],
            "ParameterLabels" : {              
            }
        }
    },
 
  "Parameters": {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "Must be the name of an existing EC2 KeyPair."
    },
    "Name": {
      "Description" :"The name of the Windows Server.",
      "Type" : "String"
    },
    "VpcId"                  : {
      "Description" : "ID of the existing Vpc that the application servers are contained in.",
      "Type"        : "AWS::EC2::VPC::Id"
    },
    "Subnet"                : {
      "Description" : "ID of the existing subnet that the application servers are connected to.",
      "Type"        : "AWS::EC2::Subnet::Id"
    },
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "Choose one of the ."
    },
    "WindowsVersion": {
      "Description" : "Windows Version",
      "Type" : "String",
      "Default" : "Windows Server 2012 R2 English 64-bit",
      "AllowedValues" : [ "Windows Server 2008 SP2 English 32-bit", "Windows Server 2008 SP2 English 64-bit",
        "Windows Server 2008 R2 English 64-bit", "Windows Server 2012 RTM English 64-bit",
        "Windows Server 2012 R2 English 64-bit" ],
      "ConstraintDescription" : "Must be a valid Windows version."
    }
  },
   
  "Resources" : {
    "WindowsSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP and RDP",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },
    
    "WindowsInstance": {  
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
            "AWS::CloudFormation::Init" : {
                "config" : {
                    "files" : {
                        "c:\\cfn\\cfn-hup.conf" : {
                          "content" : { "Fn::Join" : ["", [
                            "[main]\n",
                            "stack=", { "Ref" : "AWS::StackId" }, "\n",
                            "region=", { "Ref" : "AWS::Region" }, "\n"
                            ]]}
                        },
                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                          "content": { "Fn::Join" : ["", [
                            "[cfn-auto-reloader-hook]\n",
                            "triggers=post.update\n",
                            "path=Resources.SharePointFoundation.Metadata.AWS::CloudFormation::Init\n",
                            "action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
                                                          " -r SharePointFoundation",
                                                          " --region ", { "Ref" : "AWS::Region" }, "\n"
                          ]]}
                        },
                        "C:\\Users\\Administrator\\Downloads\\firstrun.ps1"    : {
                            "content" : { "Fn::Join" : [ "", [
                                "echo \"Installing web-webserver\"\n",
                                "add-windowsfeature web-webserver -includeallsubfeature -logpath $env:temp\\webserver_addrole.log\n",
                                "echo \"Installing web-mgmt-tools\"\n",
                                "add-windowsfeature web-mgmt-tools -includeallsubfeature -logpath $env:temp\\mgmttools_addrole.log\n",
                                "echo \"This is the first Windows IIS Server ",
                                {"Ref" : "Name"},
                                "\" >> C:\\inetpub\\wwwroot\\index.html\n"
                                ]]
                            }
                        }                        
                    },
                    "commands" : {
                        "b-configure" : {
                            "command" : "powershell.exe -ExecutionPolicy unrestricted C:\\Users\\Administrator\\Downloads\\firstrun.ps1"
                            }}}},
                    "services" : {
                    "windows" : {
                      "cfn-hup" : {
                        "enabled" : "true",
                        "ensureRunning" : "true",
                        "files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
                      }
                    }
                  }
        },
      "Properties": {
        "InstanceType"   : { "Ref" : "InstanceType" },
        "ImageId": { "Fn::GetAtt": [ "AMIInfo", "Id" ] },
        "KeyName" : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "Subnet"},
        "SecurityGroupIds" : [ {"Fn::GetAtt" : [ "WindowsSecurityGroup", "GroupId" ]} ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "<script>\n",

          "cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, 
          " -r WindowsInstance",
          " --region ", { "Ref" : "AWS::Region" }, "\n",

          "cfn-signal.exe -e %ERRORLEVEL% ", { "Fn::Base64" : { "Ref" : "WindowsInstanceWaitHandle" }}, "\n",
          
          "</script>"
          ]]}}
      }
    },

    "WindowsInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WindowsInstanceWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WindowsInstance",
      "Properties" : {
        "Handle" : {"Ref" : "WindowsInstanceWaitHandle"},
        "Timeout" : "3600"
      }
    },
 
    "AMIInfo": {
      "Type": "Custom::AMIInfo",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["AMIInfoFunction", "Arn"] },
        "Region": { "Ref": "AWS::Region" },
        "OSName": { "Ref": "WindowsVersion" }
      }
    },
    
    "AMIInfoFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
            "S3Bucket": "emea-training-bucket",
            "S3Key": "amilookup-win.zip"
        },
        "Handler": { "Fn::Join" : [ "", ["amilookup-win",".handler"] ] },
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },        
        "Runtime": "nodejs4.3",
        "Timeout": "30"
      }
    },
 
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Principal": {"Service": ["lambda.amazonaws.com"]},
              "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
                "Effect": "Allow",
                "Action": ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],
                "Resource": "arn:aws:logs:*:*:*"
            },
            {
                "Effect": "Allow",
                "Action": ["ec2:DescribeImages"],
                "Resource": "*"
            }]
          }
        }]
      }
    }    
  },
  
  "Outputs" : {
    "ServerURL" : {
      "Description": "The AWS Generated URL.",
      "Value" : { "Fn::Join" : [ "", [
        "http://",
        {"Fn::GetAtt": [ "WindowsInstance", "PublicDnsName" ]}
        ]]}
    }
  }  
}